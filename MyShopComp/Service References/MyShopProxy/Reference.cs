//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyShopCompInspectionSync.MyShopProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="uspSelAllCompInspectionExportData_Result", Namespace="http://schemas.datacontract.org/2004/07/ATP.DataModel")]
    [System.SerializableAttribute()]
    public partial class uspSelAllCompInspectionExportData_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AIRPumpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoMaticTransmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrakeFrontRightSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrakeFrontSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrakeOrStreeringMechanismField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrakeRearRightSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrakeRearSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrakeTypeFrontField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrakeTypeRearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BreakPedalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalyticConverterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrOdoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ERGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmissionLicClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmissionLicNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmissionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvaporativeControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExhaustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FleetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelInletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlazingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectionChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceCompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InsuranceExpDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LFBrakeBondRivetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LRBrakeBondRivetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LowestTireReadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MechLicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MechNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MechanicNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MilesInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MilesOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldMileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldMileageReadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrevOdoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFBrakeBondRivetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RRBrakeBondRivetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegVerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoadTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoadTestBreaksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SafetyStickerYYMMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpeedometerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateTaxRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StickerChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StickerMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreeringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TireFrontRightSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TireFrontSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TireRearRightSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TireRearSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TireSpareSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehBodyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleCountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> VehicleCountyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleDriveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleDrivingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleMakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid VehicleServiceGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AIRPump {
            get {
                return this.AIRPumpField;
            }
            set {
                if ((object.ReferenceEquals(this.AIRPumpField, value) != true)) {
                    this.AIRPumpField = value;
                    this.RaisePropertyChanged("AIRPump");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoMaticTransmission {
            get {
                return this.AutoMaticTransmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoMaticTransmissionField, value) != true)) {
                    this.AutoMaticTransmissionField = value;
                    this.RaisePropertyChanged("AutoMaticTransmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrakeFrontRightSize {
            get {
                return this.BrakeFrontRightSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeFrontRightSizeField, value) != true)) {
                    this.BrakeFrontRightSizeField = value;
                    this.RaisePropertyChanged("BrakeFrontRightSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrakeFrontSize {
            get {
                return this.BrakeFrontSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeFrontSizeField, value) != true)) {
                    this.BrakeFrontSizeField = value;
                    this.RaisePropertyChanged("BrakeFrontSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrakeOrStreeringMechanism {
            get {
                return this.BrakeOrStreeringMechanismField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeOrStreeringMechanismField, value) != true)) {
                    this.BrakeOrStreeringMechanismField = value;
                    this.RaisePropertyChanged("BrakeOrStreeringMechanism");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrakeRearRightSize {
            get {
                return this.BrakeRearRightSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeRearRightSizeField, value) != true)) {
                    this.BrakeRearRightSizeField = value;
                    this.RaisePropertyChanged("BrakeRearRightSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrakeRearSize {
            get {
                return this.BrakeRearSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeRearSizeField, value) != true)) {
                    this.BrakeRearSizeField = value;
                    this.RaisePropertyChanged("BrakeRearSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrakeTypeFront {
            get {
                return this.BrakeTypeFrontField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeTypeFrontField, value) != true)) {
                    this.BrakeTypeFrontField = value;
                    this.RaisePropertyChanged("BrakeTypeFront");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrakeTypeRear {
            get {
                return this.BrakeTypeRearField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeTypeRearField, value) != true)) {
                    this.BrakeTypeRearField = value;
                    this.RaisePropertyChanged("BrakeTypeRear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BreakPedal {
            get {
                return this.BreakPedalField;
            }
            set {
                if ((object.ReferenceEquals(this.BreakPedalField, value) != true)) {
                    this.BreakPedalField = value;
                    this.RaisePropertyChanged("BreakPedal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalyticConverter {
            get {
                return this.CatalyticConverterField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalyticConverterField, value) != true)) {
                    this.CatalyticConverterField = value;
                    this.RaisePropertyChanged("CatalyticConverter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrOdo {
            get {
                return this.CurrOdoField;
            }
            set {
                if ((this.CurrOdoField.Equals(value) != true)) {
                    this.CurrOdoField = value;
                    this.RaisePropertyChanged("CurrOdo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustState {
            get {
                return this.CustStateField;
            }
            set {
                if ((object.ReferenceEquals(this.CustStateField, value) != true)) {
                    this.CustStateField = value;
                    this.RaisePropertyChanged("CustState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Doors {
            get {
                return this.DoorsField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorsField, value) != true)) {
                    this.DoorsField = value;
                    this.RaisePropertyChanged("Doors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ERG {
            get {
                return this.ERGField;
            }
            set {
                if ((object.ReferenceEquals(this.ERGField, value) != true)) {
                    this.ERGField = value;
                    this.RaisePropertyChanged("ERG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmissionLicClass {
            get {
                return this.EmissionLicClassField;
            }
            set {
                if ((object.ReferenceEquals(this.EmissionLicClassField, value) != true)) {
                    this.EmissionLicClassField = value;
                    this.RaisePropertyChanged("EmissionLicClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmissionLicNum {
            get {
                return this.EmissionLicNumField;
            }
            set {
                if ((object.ReferenceEquals(this.EmissionLicNumField, value) != true)) {
                    this.EmissionLicNumField = value;
                    this.RaisePropertyChanged("EmissionLicNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmissionNum {
            get {
                return this.EmissionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.EmissionNumField, value) != true)) {
                    this.EmissionNumField = value;
                    this.RaisePropertyChanged("EmissionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvaporativeControl {
            get {
                return this.EvaporativeControlField;
            }
            set {
                if ((object.ReferenceEquals(this.EvaporativeControlField, value) != true)) {
                    this.EvaporativeControlField = value;
                    this.RaisePropertyChanged("EvaporativeControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exhaust {
            get {
                return this.ExhaustField;
            }
            set {
                if ((object.ReferenceEquals(this.ExhaustField, value) != true)) {
                    this.ExhaustField = value;
                    this.RaisePropertyChanged("Exhaust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FleetNumber {
            get {
                return this.FleetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FleetNumberField, value) != true)) {
                    this.FleetNumberField = value;
                    this.RaisePropertyChanged("FleetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fuel {
            get {
                return this.FuelField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelField, value) != true)) {
                    this.FuelField = value;
                    this.RaisePropertyChanged("Fuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelInlet {
            get {
                return this.FuelInletField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelInletField, value) != true)) {
                    this.FuelInletField = value;
                    this.RaisePropertyChanged("FuelInlet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Glazing {
            get {
                return this.GlazingField;
            }
            set {
                if ((object.ReferenceEquals(this.GlazingField, value) != true)) {
                    this.GlazingField = value;
                    this.RaisePropertyChanged("Glazing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectionCharge {
            get {
                return this.InspectionChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectionChargeField, value) != true)) {
                    this.InspectionChargeField = value;
                    this.RaisePropertyChanged("InspectionCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectionDate {
            get {
                return this.InspectionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectionDateField, value) != true)) {
                    this.InspectionDateField = value;
                    this.RaisePropertyChanged("InspectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insurance {
            get {
                return this.InsuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceField, value) != true)) {
                    this.InsuranceField = value;
                    this.RaisePropertyChanged("Insurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceCompanyName {
            get {
                return this.InsuranceCompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceCompanyNameField, value) != true)) {
                    this.InsuranceCompanyNameField = value;
                    this.RaisePropertyChanged("InsuranceCompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InsuranceExpDate {
            get {
                return this.InsuranceExpDateField;
            }
            set {
                if ((this.InsuranceExpDateField.Equals(value) != true)) {
                    this.InsuranceExpDateField = value;
                    this.RaisePropertyChanged("InsuranceExpDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceState {
            get {
                return this.InsuranceStateField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceStateField, value) != true)) {
                    this.InsuranceStateField = value;
                    this.RaisePropertyChanged("InsuranceState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LFBrakeBondRivet {
            get {
                return this.LFBrakeBondRivetField;
            }
            set {
                if ((object.ReferenceEquals(this.LFBrakeBondRivetField, value) != true)) {
                    this.LFBrakeBondRivetField = value;
                    this.RaisePropertyChanged("LFBrakeBondRivet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LRBrakeBondRivet {
            get {
                return this.LRBrakeBondRivetField;
            }
            set {
                if ((object.ReferenceEquals(this.LRBrakeBondRivetField, value) != true)) {
                    this.LRBrakeBondRivetField = value;
                    this.RaisePropertyChanged("LRBrakeBondRivet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicClass {
            get {
                return this.LicClassField;
            }
            set {
                if ((object.ReferenceEquals(this.LicClassField, value) != true)) {
                    this.LicClassField = value;
                    this.RaisePropertyChanged("LicClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicNum {
            get {
                return this.LicNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LicNumField, value) != true)) {
                    this.LicNumField = value;
                    this.RaisePropertyChanged("LicNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lights {
            get {
                return this.LightsField;
            }
            set {
                if ((object.ReferenceEquals(this.LightsField, value) != true)) {
                    this.LightsField = value;
                    this.RaisePropertyChanged("Lights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LowestTireReading {
            get {
                return this.LowestTireReadingField;
            }
            set {
                if ((object.ReferenceEquals(this.LowestTireReadingField, value) != true)) {
                    this.LowestTireReadingField = value;
                    this.RaisePropertyChanged("LowestTireReading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MechLic {
            get {
                return this.MechLicField;
            }
            set {
                if ((object.ReferenceEquals(this.MechLicField, value) != true)) {
                    this.MechLicField = value;
                    this.RaisePropertyChanged("MechLic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MechName {
            get {
                return this.MechNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MechNameField, value) != true)) {
                    this.MechNameField = value;
                    this.RaisePropertyChanged("MechName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MechanicName {
            get {
                return this.MechanicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MechanicNameField, value) != true)) {
                    this.MechanicNameField = value;
                    this.RaisePropertyChanged("MechanicName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MilesIn {
            get {
                return this.MilesInField;
            }
            set {
                if ((object.ReferenceEquals(this.MilesInField, value) != true)) {
                    this.MilesInField = value;
                    this.RaisePropertyChanged("MilesIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MilesOut {
            get {
                return this.MilesOutField;
            }
            set {
                if ((object.ReferenceEquals(this.MilesOutField, value) != true)) {
                    this.MilesOutField = value;
                    this.RaisePropertyChanged("MilesOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAIC {
            get {
                return this.NAICField;
            }
            set {
                if ((object.ReferenceEquals(this.NAICField, value) != true)) {
                    this.NAICField = value;
                    this.RaisePropertyChanged("NAIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldMileage {
            get {
                return this.OldMileageField;
            }
            set {
                if ((object.ReferenceEquals(this.OldMileageField, value) != true)) {
                    this.OldMileageField = value;
                    this.RaisePropertyChanged("OldMileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldMileageReading {
            get {
                return this.OldMileageReadingField;
            }
            set {
                if ((object.ReferenceEquals(this.OldMileageReadingField, value) != true)) {
                    this.OldMileageReadingField = value;
                    this.RaisePropertyChanged("OldMileageReading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Other {
            get {
                return this.OtherField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherField, value) != true)) {
                    this.OtherField = value;
                    this.RaisePropertyChanged("Other");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCV {
            get {
                return this.PCVField;
            }
            set {
                if ((object.ReferenceEquals(this.PCVField, value) != true)) {
                    this.PCVField = value;
                    this.RaisePropertyChanged("PCV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassInspection {
            get {
                return this.PassInspectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PassInspectionField, value) != true)) {
                    this.PassInspectionField = value;
                    this.RaisePropertyChanged("PassInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plate {
            get {
                return this.PlateField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateField, value) != true)) {
                    this.PlateField = value;
                    this.RaisePropertyChanged("Plate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrevOdo {
            get {
                return this.PrevOdoField;
            }
            set {
                if ((this.PrevOdoField.Equals(value) != true)) {
                    this.PrevOdoField = value;
                    this.RaisePropertyChanged("PrevOdo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFBrakeBondRivet {
            get {
                return this.RFBrakeBondRivetField;
            }
            set {
                if ((object.ReferenceEquals(this.RFBrakeBondRivetField, value) != true)) {
                    this.RFBrakeBondRivetField = value;
                    this.RaisePropertyChanged("RFBrakeBondRivet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RRBrakeBondRivet {
            get {
                return this.RRBrakeBondRivetField;
            }
            set {
                if ((object.ReferenceEquals(this.RRBrakeBondRivetField, value) != true)) {
                    this.RRBrakeBondRivetField = value;
                    this.RaisePropertyChanged("RRBrakeBondRivet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegVerified {
            get {
                return this.RegVerifiedField;
            }
            set {
                if ((object.ReferenceEquals(this.RegVerifiedField, value) != true)) {
                    this.RegVerifiedField = value;
                    this.RaisePropertyChanged("RegVerified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoNum {
            get {
                return this.RoNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RoNumField, value) != true)) {
                    this.RoNumField = value;
                    this.RaisePropertyChanged("RoNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoadTest {
            get {
                return this.RoadTestField;
            }
            set {
                if ((object.ReferenceEquals(this.RoadTestField, value) != true)) {
                    this.RoadTestField = value;
                    this.RaisePropertyChanged("RoadTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoadTestBreaks {
            get {
                return this.RoadTestBreaksField;
            }
            set {
                if ((object.ReferenceEquals(this.RoadTestBreaksField, value) != true)) {
                    this.RoadTestBreaksField = value;
                    this.RaisePropertyChanged("RoadTestBreaks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SafetyStickerYYMM {
            get {
                return this.SafetyStickerYYMMField;
            }
            set {
                if ((object.ReferenceEquals(this.SafetyStickerYYMMField, value) != true)) {
                    this.SafetyStickerYYMMField = value;
                    this.RaisePropertyChanged("SafetyStickerYYMM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speedometer {
            get {
                return this.SpeedometerField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedometerField, value) != true)) {
                    this.SpeedometerField = value;
                    this.RaisePropertyChanged("Speedometer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateTaxRate {
            get {
                return this.StateTaxRateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateTaxRateField, value) != true)) {
                    this.StateTaxRateField = value;
                    this.RaisePropertyChanged("StateTaxRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationName {
            get {
                return this.StationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StationNameField, value) != true)) {
                    this.StationNameField = value;
                    this.RaisePropertyChanged("StationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationNumber {
            get {
                return this.StationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.StationNumberField, value) != true)) {
                    this.StationNumberField = value;
                    this.RaisePropertyChanged("StationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StickerCharge {
            get {
                return this.StickerChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.StickerChargeField, value) != true)) {
                    this.StickerChargeField = value;
                    this.RaisePropertyChanged("StickerCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StickerMonth {
            get {
                return this.StickerMonthField;
            }
            set {
                if ((object.ReferenceEquals(this.StickerMonthField, value) != true)) {
                    this.StickerMonthField = value;
                    this.RaisePropertyChanged("StickerMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Streering {
            get {
                return this.StreeringField;
            }
            set {
                if ((object.ReferenceEquals(this.StreeringField, value) != true)) {
                    this.StreeringField = value;
                    this.RaisePropertyChanged("Streering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TireFrontRightSize {
            get {
                return this.TireFrontRightSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.TireFrontRightSizeField, value) != true)) {
                    this.TireFrontRightSizeField = value;
                    this.RaisePropertyChanged("TireFrontRightSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TireFrontSize {
            get {
                return this.TireFrontSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.TireFrontSizeField, value) != true)) {
                    this.TireFrontSizeField = value;
                    this.RaisePropertyChanged("TireFrontSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TireRearRightSize {
            get {
                return this.TireRearRightSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.TireRearRightSizeField, value) != true)) {
                    this.TireRearRightSizeField = value;
                    this.RaisePropertyChanged("TireRearRightSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TireRearSize {
            get {
                return this.TireRearSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.TireRearSizeField, value) != true)) {
                    this.TireRearSizeField = value;
                    this.RaisePropertyChanged("TireRearSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TireSpareSize {
            get {
                return this.TireSpareSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.TireSpareSizeField, value) != true)) {
                    this.TireSpareSizeField = value;
                    this.RaisePropertyChanged("TireSpareSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tires {
            get {
                return this.TiresField;
            }
            set {
                if ((object.ReferenceEquals(this.TiresField, value) != true)) {
                    this.TiresField = value;
                    this.RaisePropertyChanged("Tires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalCostField, value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIN {
            get {
                return this.VINField;
            }
            set {
                if ((object.ReferenceEquals(this.VINField, value) != true)) {
                    this.VINField = value;
                    this.RaisePropertyChanged("VIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehBodyType {
            get {
                return this.VehBodyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehBodyTypeField, value) != true)) {
                    this.VehBodyTypeField = value;
                    this.RaisePropertyChanged("VehBodyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleCounty {
            get {
                return this.VehicleCountyField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleCountyField, value) != true)) {
                    this.VehicleCountyField = value;
                    this.RaisePropertyChanged("VehicleCounty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> VehicleCountyCode {
            get {
                return this.VehicleCountyCodeField;
            }
            set {
                if ((this.VehicleCountyCodeField.Equals(value) != true)) {
                    this.VehicleCountyCodeField = value;
                    this.RaisePropertyChanged("VehicleCountyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleDrive {
            get {
                return this.VehicleDriveField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleDriveField, value) != true)) {
                    this.VehicleDriveField = value;
                    this.RaisePropertyChanged("VehicleDrive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleDriving {
            get {
                return this.VehicleDrivingField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleDrivingField, value) != true)) {
                    this.VehicleDrivingField = value;
                    this.RaisePropertyChanged("VehicleDriving");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleMake {
            get {
                return this.VehicleMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleMakeField, value) != true)) {
                    this.VehicleMakeField = value;
                    this.RaisePropertyChanged("VehicleMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleModel {
            get {
                return this.VehicleModelField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleModelField, value) != true)) {
                    this.VehicleModelField = value;
                    this.RaisePropertyChanged("VehicleModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid VehicleServiceGuid {
            get {
                return this.VehicleServiceGuidField;
            }
            set {
                if ((this.VehicleServiceGuidField.Equals(value) != true)) {
                    this.VehicleServiceGuidField = value;
                    this.RaisePropertyChanged("VehicleServiceGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleYear {
            get {
                return this.VehicleYearField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleYearField, value) != true)) {
                    this.VehicleYearField = value;
                    this.RaisePropertyChanged("VehicleYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkOrder {
            get {
                return this.WorkOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkOrderField, value) != true)) {
                    this.WorkOrderField = value;
                    this.RaisePropertyChanged("WorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection", ConfigurationName="MyShopProxy.ICompInspection")]
    public interface ICompInspection {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/SelAllC" +
            "ompInspectionExportData", ReplyAction="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/SelAllC" +
            "ompInspectionExportDataResponse")]
        MyShopCompInspectionSync.MyShopProxy.uspSelAllCompInspectionExportData_Result[] SelAllCompInspectionExportData(System.Nullable<int> dealerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/SelAllC" +
            "ompInspectionExportData", ReplyAction="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/SelAllC" +
            "ompInspectionExportDataResponse")]
        System.Threading.Tasks.Task<MyShopCompInspectionSync.MyShopProxy.uspSelAllCompInspectionExportData_Result[]> SelAllCompInspectionExportDataAsync(System.Nullable<int> dealerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/UpdtExp" +
            "ortToCompInspectionStatus", ReplyAction="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/UpdtExp" +
            "ortToCompInspectionStatusResponse")]
        int UpdtExportToCompInspectionStatus(System.Nullable<long> iD, System.Nullable<int> dealerId, System.Nullable<bool> isFailed, string failedReaon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/UpdtExp" +
            "ortToCompInspectionStatus", ReplyAction="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/UpdtExp" +
            "ortToCompInspectionStatusResponse")]
        System.Threading.Tasks.Task<int> UpdtExportToCompInspectionStatusAsync(System.Nullable<long> iD, System.Nullable<int> dealerId, System.Nullable<bool> isFailed, string failedReaon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/LogErro" +
            "r", ReplyAction="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/LogErro" +
            "rResponse")]
        bool LogError(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/LogErro" +
            "r", ReplyAction="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/LogErro" +
            "rResponse")]
        System.Threading.Tasks.Task<bool> LogErrorAsync(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/LogInfo" +
            "rmation", ReplyAction="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/LogInfo" +
            "rmationResponse")]
        bool LogInformation(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/LogInfo" +
            "rmation", ReplyAction="http://www.ADAMCentralUSA.com/ADAM/Service/CompInspection/ICompInspection/LogInfo" +
            "rmationResponse")]
        System.Threading.Tasks.Task<bool> LogInformationAsync(string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompInspectionChannel : MyShopCompInspectionSync.MyShopProxy.ICompInspection, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompInspectionClient : System.ServiceModel.ClientBase<MyShopCompInspectionSync.MyShopProxy.ICompInspection>, MyShopCompInspectionSync.MyShopProxy.ICompInspection {
        
        public CompInspectionClient() {
        }
        
        public CompInspectionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompInspectionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompInspectionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompInspectionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyShopCompInspectionSync.MyShopProxy.uspSelAllCompInspectionExportData_Result[] SelAllCompInspectionExportData(System.Nullable<int> dealerId) {
            return base.Channel.SelAllCompInspectionExportData(dealerId);
        }
        
        public System.Threading.Tasks.Task<MyShopCompInspectionSync.MyShopProxy.uspSelAllCompInspectionExportData_Result[]> SelAllCompInspectionExportDataAsync(System.Nullable<int> dealerId) {
            return base.Channel.SelAllCompInspectionExportDataAsync(dealerId);
        }
        
        public int UpdtExportToCompInspectionStatus(System.Nullable<long> iD, System.Nullable<int> dealerId, System.Nullable<bool> isFailed, string failedReaon) {
            return base.Channel.UpdtExportToCompInspectionStatus(iD, dealerId, isFailed, failedReaon);
        }
        
        public System.Threading.Tasks.Task<int> UpdtExportToCompInspectionStatusAsync(System.Nullable<long> iD, System.Nullable<int> dealerId, System.Nullable<bool> isFailed, string failedReaon) {
            return base.Channel.UpdtExportToCompInspectionStatusAsync(iD, dealerId, isFailed, failedReaon);
        }
        
        public bool LogError(string msg) {
            return base.Channel.LogError(msg);
        }
        
        public System.Threading.Tasks.Task<bool> LogErrorAsync(string msg) {
            return base.Channel.LogErrorAsync(msg);
        }
        
        public bool LogInformation(string msg) {
            return base.Channel.LogInformation(msg);
        }
        
        public System.Threading.Tasks.Task<bool> LogInformationAsync(string msg) {
            return base.Channel.LogInformationAsync(msg);
        }
    }
}
